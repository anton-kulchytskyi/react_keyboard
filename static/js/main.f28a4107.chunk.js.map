{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyup","event","setState","key","window","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,UAAS,iBAAO,CACnBH,WAAYE,EAAME,SAfxB,uDAKE,WACEC,OAAOC,iBAAiB,QAASC,KAAKN,eAN1C,kCASE,WACEI,OAAOG,oBAAoB,QAASD,KAAKN,eAV7C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,8BACE,oBAAIA,UAAU,eAAd,SACGT,EAAU,mCACkC,MAAfA,EAAqB,QAAUA,EADlD,KAEN,oCA5BjB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f28a4107.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState(() => ({\n      pressedKey: event.key,\n    }));\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div>\n          <h1 className=\"App__message\">\n            {pressedKey ? (\n              `The last pressed key is [${pressedKey === ' ' ? 'Space' : pressedKey}]`\n            ) : ('Nothing was pressed yet')}\n          </h1>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}